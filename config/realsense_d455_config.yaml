%YAML:1.0

#common parameters
imu_topic: "/camera/imu"
image_topic: "/decompressed_img"
depth_topic: "/decompressed_depth_img"
output_path: "/home/chrisliu/ROSws_nuc/AtalsSLAM_ws/src/vins-rgbd-atlas/output"

# useless? wait to delete
#pointcloud settings
pcl_dist: 10
u_boundary: 10
d_boundary: 10
l_boundary: 40
r_boundary: 40
pcl_min_dist: 0.3
pcl_max_dist: 10
resolution: 0.02

#RGBD camera Ideal Range
depth_min_dist: 0.2
depth_max_dist: 10

est_frame: 2

#camera calibration
model_type: PINHOLE
camera_name: camera
image_width: 640
image_height: 480
  #TODO modify distortion

distortion_parameters:
   k1: -0.04936948662284771
   k2: 0.033415696560328244
   p1: -3.1102285057757626e-05
   p2: -0.0003755759561384779
projection_parameters:
   fx: 380.9915802505342
   fy: 380.5726314074475
   cx: 322.1283748720177
   cy: 243.44425225854206

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data:  [0.99998153,-0.00148039,-0.00589536,
          0.00150212, 0.99999209, 0.00368348,
          0.00588986,-0.00369226, 0.99997584]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [0.03141572, 0.00558428, 0.0185593]


#feature traker paprameters
max_cnt: 110           # max feature number in feature tracking
min_dist: 30            # min distance between two features
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 0           # publish tracking image as topic
equalize: 0             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
#for handheld, wheeld
#acc_n: 0.0214154410705          # accelerometer measurement noise standard deviation. #0.2
#gyr_n: 0.00265786186576        # gyroscope measurement noise standard deviation.     #0.05
#acc_w: 0.000529808355822         # accelerometer bias random work noise standard deviation.  #0.02
#gyr_w: 2.67642044435e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5

#for tracked applications
acc_n: 0.5          # accelerometer measurement noise standard deviation. #0.2
gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05
acc_w: 0.001         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 4.0e-5       # gyroscope bias random work noise standard deviation.     #4.0e-5


g_norm: 9.805       # gravity magnitude

#loop closure parameters
loop_closure: 0                    # start loop closure
fast_relocalization: 1             # useful in real-time and large project
load_previous_pose_graph: 1        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/chrisliu/ROSws_nuc/AtalsSLAM_ws/src/vins-rgbd-atlas/output/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.0017826587749623958           # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                      # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0.0 #0.033               # unit: s. rolling shutter read out time per frame (from data sheet).

#visualization parameters
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ

#暂时仅考虑动物
dynamic_label: ["person", "bird", "cat", "dog", "horse",
                "sheep", "cow", "elephant", "bear", "zebra",
                "giraffe"]
